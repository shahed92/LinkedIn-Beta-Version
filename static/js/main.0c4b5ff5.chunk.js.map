{"version":3,"sources":["features/userSlice.js","InputOption.js","Post.js","firebase.js","Feed.js","HeaderOption.js","Header.js","Login.js","Sidebar.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","InputOption","Icon","title","color","class","style","Post","description","message","photoURL","className","Avatar","src","toUpperCase","ThumbUpOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","type","value","onChange","e","target","placeholder","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","HeaderOption","avatar","Header","dispatch","useDispatch","alt","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","useStyles","makeStyles","theme","root","marginBottom","spacing","Login","classes","setName","setEmail","password","setPassword","profilepic","setProfilepic","noValidate","autoComplete","TextField","label","fullWidth","variant","Button","signInWithEmailAndPassword","then","userAuth","uid","alert","createUserWithEmailAndPassword","updateProfile","catch","error","Sidebar","recentItem","topic","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c4b5ff5.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from \"react\";\nimport \"./feedOption.css\";\n\nfunction InputOption({ Icon, title, color }) {\n  return (\n    <div class=\"inputOption\">\n      <Icon style={{ color: color }} />\n      <h4>{title}</h4>\n    </div>\n  );\n}\n\nexport default InputOption;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport InputOption from \"./InputOption\";\nimport \"./post.css\";\nimport ThumbUpOutlinedIcon from \"@material-ui/icons/ThumbUpOutlined\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\n\nfunction Post({ name, description, message, photoURL }) {\n  return (\n    <div className=\"post\">\n      <div className=\"post_header\">\n        <Avatar src={photoURL}>{name[0].toUpperCase()}</Avatar>\n        <div className=\"post_info\">\n          <h2>{name}</h2>\n          <p>{description}</p>\n        </div>\n      </div>\n      <div className=\"post_body\">\n        <p>{message} </p>\n      </div>\n      <div className=\"post_button\">\n        <InputOption Icon={ThumbUpOutlinedIcon} title=\"Like\" color=\"grey\" />\n        <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"grey\" />\n        <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"grey\" />\n        <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"grey\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAB7kHk-5hkTkoizdCu6TtJcmVDwdwrgqE\",\n  authDomain: \"llinked-in-clone.firebaseapp.com\",\n  projectId: \"llinked-in-clone\",\n  storageBucket: \"llinked-in-clone.appspot.com\",\n  messagingSenderId: \"479018598776\",\n  appId: \"1:479018598776:web:8fd5a6616524e38946088d\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import React, { useState, useEffect } from \"react\";\nimport \"./feed.css\";\nimport InputOption from \"./InputOption\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport Post from \"./Post\";\nimport { db, auth } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { selectUser } from \"./features/userSlice\";\nimport { useSelector } from \"react-redux\";\n\nfunction Feed() {\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"post\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) =>\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      );\n  }, []);\n\n  const sendPost = (e) => {\n    e.preventDefault();\n    db.collection(\"post\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoURL: user.photoURL,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed_inputContainer\">\n        <div className=\"feed_input\">\n          <CreateIcon />\n          <form action=\"\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              name=\"\"\n              id=\"\"\n              placeholder=\"Start a post\"\n            />\n            <button onClick={sendPost} type=\"submit\">\n              send\n            </button>\n          </form>\n        </div>\n        <div className=\"feed_inputOptions\">\n          <InputOption Icon={ImageIcon} title=\"photo\" color=\"#70B5F9\" />\n          <InputOption Icon={SubscriptionsIcon} title=\"video\" color=\"#E7A33E\" />\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\n          <InputOption\n            Icon={CalendarViewDayIcon}\n            title=\"write article\"\n            color=\"#7fc15e\"\n          />\n        </div>\n      </div>\n      {/* Post */}\n      {posts.map(({ id, data: { name, description, message, photoURL } }) => (\n        <Post\n          key={id}\n          name={name}\n          description={description}\n          message={message}\n          photoURL={photoURL}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Feed;\n","import React from \"react\";\nimport \"./HeaderOption.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n  const user = useSelector(selectUser);\n  return (\n    <div className=\"headerOption\" onClick={onClick}>\n      {Icon && <Icon className=\"headerOption_icon\" />}\n      {avatar && (\n        <Avatar className=\"headerOption_icon\" src={user?.photoURL}>\n          {user?.email[0].toUpperCase()}\n        </Avatar>\n      )}\n      <h3 className=\"headerOption__title\">{title}</h3>\n    </div>\n  );\n}\n\nexport default HeaderOption;\n","import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HeaderOption from \"./HeaderOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { logout, userSlice } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const logoutOfApp = () => {\n    dispatch(logout());\n    auth.signOut();\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"header-left\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\n          alt=\"\"\n        />\n        <div className=\"header-search\">\n          <SearchIcon />\n          <input type=\"text\" placeholder=\"Search\" />\n        </div>\n      </div>\n      <div className=\"header-right\">\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\n        <HeaderOption avatar={true} title=\"Me\" onClick={logoutOfApp} />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./login.css\";\nimport React, { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"./features/userSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      marginBottom: theme.spacing(2),\n    },\n  },\n}));\nfunction Login() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [profilepic, setProfilepic] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const register = () => {\n    if (!name) {\n      alert(\"need to fill your name\");\n    }\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userAuth) => {\n        userAuth.user\n          .updateProfile({\n            displayName: name,\n            photoURL: profilepic,\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: name,\n                photoURL: profilepic,\n              })\n            );\n          });\n      })\n      .catch((error) => alert(error));\n\n    // setName(\"\");\n    // setEmail(\"\");\n    // setPassword(\"\");\n    // setProfilepic(\"\");\n  };\n  const loginToApp = (e) => {\n    e.preventDefault();\n\n    auth.signInWithEmailAndPassword(email, password).then(\n      login((userAuth) => ({\n        email: userAuth.user.email,\n        uid: userAuth.user.uid,\n        displayName: userAuth.user.displayName,\n        photoURL: userAuth.user.photoURL,\n      }))\n    );\n  };\n  return (\n    <div className=\"login\">\n      <form noValidate autoComplete=\"off\" className={classes.root}>\n        <TextField\n          type=\"text\"\n          id=\"outlined-basic\"\n          label=\"Name\"\n          fullWidth\n          placeholder=\"Name is required for registration\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Photo url\"\n          fullWidth\n          placeholder=\"It is optional\"\n          variant=\"outlined\"\n          value={profilepic}\n          onChange={(e) => setProfilepic(e.target.value)}\n        />\n        <TextField\n          type=\"email\"\n          id=\"outlined-basic\"\n          label=\"Email\"\n          fullWidth\n          variant=\"outlined\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <TextField\n          type=\"password\"\n          id=\"outlined-basic\"\n          label=\"password\"\n          fullWidth\n          variant=\"outlined\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <Button\n          onClick={loginToApp}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Log-in\n        </Button>\n      </form>\n      <p>\n        Not a member?{\" \"}\n        <span className=\"register\" onClick={register}>\n          {\" \"}\n          Register\n        </span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport \"./sidebar.css\";\n\nfunction Sidebar() {\n  let recentItem = (topic) => {\n    return (\n      <div className=\"sidebar_recentitem\">\n        <span className=\"hash_tag\">#</span>\n        <p>{topic}</p>\n      </div>\n    );\n  };\n\n  const user = useSelector(selectUser);\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar_top\">\n        <img src=\"https://source.unsplash.com/random\" alt=\"\" />\n        <Avatar className=\"sidebar_avatar\" src={user.photoURL}>\n          {user.email[0].toUpperCase()}\n        </Avatar>\n        <h2>{user.displayName}</h2>\n        <h4> {user.email} </h4>\n      </div>\n      <div className=\"sidebar_stats\">\n        <div className=\"sidebar_stat\">\n          <p>who viewed you</p>\n          <p className=\"sidebar_statNumber\">2,567</p>\n        </div>\n        <div className=\"sidebar_stat\">\n          <p> viewes on post</p>\n          <p className=\"sidebar_statNumber\">4,567</p>\n        </div>\n      </div>\n      <div className=\"sidebar_bottom\">\n        <p>recent</p>\n        {recentItem(\"reactjs\")}\n        {recentItem(\"programming\")}\n        {recentItem(\"software engineering\")}\n        {recentItem(\"web developer\")}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./widgets.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\n\nfunction Widgets() {\n  const newsArticle = (heading, subtitle) => {\n    return (\n      <div className=\"widgets_article\">\n        <div className=\"widgets_articleLeft\">\n          <FiberManualRecordIcon />\n        </div>\n        <div className=\"widgets_articleRight\">\n          <h2>{heading}</h2>\n          <p> {subtitle} </p>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets_header\">\n        <h2>LinkedIn News</h2>\n        <InfoIcon />\n      </div>\n      {newsArticle(\n        \"Bangladesh is Great\",\n        \"Bangladesh, to the east of India on the Bay of Bengal, is a South Asian country marked by lush greenery and many waterways.\"\n      )}\n      {newsArticle(\n        \"Life Is Beautiful\",\n        \"Hope is a good thing may be the best of things. And hope never Dies\"\n      )}\n      {newsArticle(\n        \"Positive Vibes\",\n        \"Don't be afraid to give up the good to go for the better.\"\n      )}\n    </div>\n  );\n}\n\nexport default Widgets;\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./App.css\";\r\nimport { login, logout, selectUser } from \"./features/userSlice\";\r\nimport Feed from \"./Feed\";\r\nimport { auth } from \"./firebase\";\r\nimport Header from \"./Header\";\r\nimport Login from \"./Login\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Widgets from \"./Widgets\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((userAuth) => {\r\n      if (userAuth) {\r\n        //  user loged in\r\n        dispatch(\r\n          login({\r\n            email: userAuth.email,\r\n            uid: userAuth.uid,\r\n            displayName: userAuth.displayName,\r\n            photoURL: userAuth.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        //  user log out\r\n        dispatch(logout());\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app_body\">\r\n          <Sidebar />\r\n\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"../features/userSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}